/*
    Programmer : Alexandru_Olteanu
    Link To Problem : https://codeforces.com/contest/1081/problem/D
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
ll const mod=1000000007LL;
ll const mod2 = 100000000LL;
ll const md=998244353LL;
ll mypowr(ll a,ll b) {ll res=1;if(b<0)b=0;a%=mod; assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll mypow(ll a,ll b) {ll res=1;if(b<0)b=0;assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}
ifstream in("input.txt");
ofstream out("output.txt");
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(), x.rend()


//#define cin in
//#define cout out

const ll infll = 9e18;
const int inf = 2e9;
const ll maxn = 1e5 + 2;

unordered_map<int, bool> special;
vector<pair<int, pii>> e;
vector<pii> v[maxn];
int done[maxn];
int p[maxn], sz[maxn];
bool vis[maxn];

int find(int x){
    return ((x == p[x]) ? x : find(p[x]));
}

void unite(int x, int y){
    if(sz[x] < sz[y]){
        p[x] = y;
        sz[y] += sz[x];
    }
    else{
        p[y] = x;
        sz[x] += sz[y];
    }
}


void build_MST(int n){

    for(int i = 0; i < n; ++i){
        int x = find(e[i].se.fi);
        int y = find(e[i].se.se);
        if(x == y)continue;
        v[e[i].se.fi].pb({e[i].se.se, e[i].fi});
        v[e[i].se.se].pb({e[i].se.fi, e[i].fi});
        unite(x, y);
    }

    return;
}
int dist = -inf;

void dfs(int x, int maxi){
    if(special[x])dist = max(dist, maxi);
    vis[x] = 1;
    for(auto u:v[x]){
        if(vis[u.fi])continue;
        dfs(u.fi, max(maxi, u.se));
    }

}


int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cout<<fixed<<setprecision(15);

    int test = 1;
    //cin>>test;
    while(test--){
        int n, m, k;
        cin>>n>>m>>k;
        for(int i = 1; i <= n; ++i){
            p[i] = i;
            sz[i] = 1;
        }
        int last = 0;
        for(int i = 1; i <= k; ++i){
            int x;cin>>x;
            special[x] = 1;
            last = x;
        }
        for(int i = 1; i <= m; ++i){
            int x, y, c;
            cin>>x>>y>>c;
            if(x > y)swap(x, y);
            if(x == y)continue;
            e.pb({c, {x, y}});
        }
        sort(all(e));
        build_MST(e.size());
        dfs(last, -inf);
        for(int i = 1; i <= k; ++i){
            cout<<dist<<" ";
        }

    }


    return 0;
}
