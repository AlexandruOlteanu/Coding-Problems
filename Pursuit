/*
    Programmer : Alexandru_Olteanu
    Link To Problem : https://codeforces.com/contest/1530/problem/C
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
ll const mod=1000000007LL;
ll const mod2 = 100000000LL;
ll const md=998244353LL;
ll mypowr(ll a,ll b) {ll res=1;if(b<0)b=0;a%=mod; assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll mypow(ll a,ll b) {ll res=1;if(b<0)b=0;assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}
ifstream in("input.txt");
ofstream out("output.txt");
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(), x.rend()


//#define cin in
//#define cout out

const ll infll = 9e18;
const int inf = 2e9;
const ll maxn = 1e5 + 2;

ll a[maxn], b[maxn];

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cout<<fixed<<setprecision(15);
    
    int test = 1;
    cin>>test;
    while(test--){
       int n;
       cin>>n;
       for(int i = 1; i <= n; ++i){
           cin>>a[i];
       }
       for(int j = 1; j <= n; ++j){
           cin>>b[j];
       }
       sort(a + 1, a + n + 1);
       sort(b + 1, b + n + 1);
       ll cnt = 0;
       ll lo = 0, hi = 2e9;
       while(lo <= hi){
           ll mid = lo + (hi - lo) / 2;
           ll sum = 0, sum2 = 0;
           for(int i = 1; i <= n; ++i){
               if(i > (n + mid) / 4)
                    sum += a[i];
           }
           sum += mid * 100;
           for(int i = 1; i <= n; ++i){
               sum2 += b[i];
           }
           if(mid < (n + mid) / 4){
               ll u = (n + mid) / 4 - mid;
               for(int i = 1; i <= u; ++i){
                   sum2 -= b[i];
               }
           }
           if(sum >= sum2){
               cnt = mid;
               hi = mid - 1;
           }
           else{
               lo = mid + 1;
           }
       }
       cout<<cnt<<'\n';
    }


    return 0;
}
