/*
    Programmer : Alexandru_Olteanu
    Link To Problem : https://codeforces.com/contest/271/problem/D
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
ll const mod=1000000007LL;
ll const mod2 = 100000000LL;
ll const md=998244353LL;
ll mypowr(ll a,ll b) {ll res=1;if(b<0)b=0;a%=mod; assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll mypow(ll a,ll b) {ll res=1;if(b<0)b=0;assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}
ifstream in("input.txt");
ofstream out("output.txt");
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(), x.rend()


//#define cin in
//#define cout out

const ll infll = 9e18;
const int inf = 2e9;
const ll maxn = 2e3 + 2;

typedef struct t t;

struct t {
    bool v;
    struct t *nx[30];
};

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cout<<fixed<<setprecision(15);

    int test = 1;
    //cin>>test;
    while(test--){
        string s;cin>>s;
        string all;cin>>all;
        int k;
        cin>>k;
        int n = s.size();
        ll cnt = 0;
        t* trie = (t *)malloc(sizeof(t));
        for(int i = 0; i <= 26; ++i)trie->nx[i] = NULL;
        t *c;
        for(int i = 0; i < n; ++i){
            c = trie;
            int sum = 0;
            for(int j = i; j < n; ++j){
                sum += (all[s[j] - 'a'] == '0');
                if(sum > k){
                    j = n + 1;
                    continue;
                }
                if(!c->nx[s[j] - 'a']){
                    c->nx[s[j] - 'a'] = (t *)malloc(sizeof(t));
                    c->nx[s[j] - 'a']->v = 1;
                    c = c->nx[s[j] - 'a'];
                    for(int i = 0; i <= 26; ++i)c->nx[i] = NULL;
                    ++cnt;
                    continue;
                }
                c = c->nx[s[j] - 'a'];
            }
        }
        cout<<cnt<<'\n';
    }


    return 0;
}
