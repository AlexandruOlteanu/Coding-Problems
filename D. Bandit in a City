/*
    Programmer : Alexandru_Olteanu
    Link To Problem : https://codeforces.com/contest/1436/problem/D
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
ll const mod=1000000007LL;
ll const mod2 = 100000000LL;
ll const md=998244353LL;
ll mypowr(ll a,ll b) {ll res=1;if(b<0)b=0;a%=mod; assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll mypow(ll a,ll b) {ll res=1;if(b<0)b=0;assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}
ifstream in("input.txt");
ofstream out("output.txt");
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(), x.rend()


//#define cin in
//#define cout out

const ll infll = 9e18;
const int inf = 2e9;
const ll maxn = 2e5 + 2;

int c[maxn];
vector<int> v[maxn];
ll maxi = 0;

struct p{
    ll x, y;
}dp[maxn];

void solve(ll x){
    if(v[x].empty()){
        dp[x].x = c[x];
        dp[x].y = 1;
        maxi = max(maxi, ll(c[x]));
        return;
    }
    for(auto u:v[x]){
        solve(u);
        dp[x].x += dp[u].x;
        dp[x].y += dp[u].y;
    }
    dp[x].x += c[x];
    if(dp[x].x / dp[x].y + (dp[x].x % dp[x].y !=0) > maxi){
        maxi = dp[x].x / dp[x].y + (dp[x].x % dp[x].y !=0);
    }

}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cout<<fixed<<setprecision(15);
    
    int test = 1;
    //cin>>test;
    while(test--){
        int n;
        cin>>n;
        for(int i = 2; i <= n; ++i){
            int x;cin>>x;
            v[x].pb(i);
        }
        for(int i = 1; i <= n; ++i){
            cin>>c[i];
        }   
        solve(1);
        cout<<maxi<<'\n';
    }

    return 0;
}
