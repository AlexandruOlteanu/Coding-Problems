/*
    Programmer : Alexandru_Olteanu
    Link To Problem : https://codeforces.com/contest/1375/problem/D
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
ll const mod=1000000007LL;
ll const mod2 = 100000000LL;
ll const md=998244353LL;
ll mypowr(ll a,ll b) {ll res=1;if(b<0)b=0;a%=mod; assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll mypow(ll a,ll b) {ll res=1;if(b<0)b=0;assert(b>=0);
for(;b;b>>=1){if(b&1)res=res*a;a=a*a;}return res;}
ifstream in("input.txt");
ofstream out("output.txt");
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define all(x) x.begin(),x.end()
#define rall(x) x.rbegin(), x.rend()


//#define cin in
//#define cout out

const ll infll = 9e18;
const int inf = 2e9;
const ll maxn = 1e3 + 2;

int a[maxn];
unordered_map<int, bool> m;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    cout<<fixed<<setprecision(15);
    

    int test = 1;
    cin>>test;
    while(test--){
        int n, k = 0;
        cin>>n;
        for(int i = 1; i <= n; ++i){
            cin>>a[i];
        }
        vector<int> res;
        for(int i = 1; i <= 2 * n; ++i){
            for(int j = 1; j <= n; ++j){
                m[a[j]] = 1;
            }
            int mx = 0;
            for(int i = 0; i < n; ++i){
                if(m[i])++mx;
                else i = n;
            }
            if(mx == n){
                for(int i = 1; i <= n; ++i){
                    if(a[i] != i - 1){
                        res.pb(i);
                        a[i] = mx;
                        i = n + 1;
                    }
                }
            }
            else{
                a[mx + 1] = mx;
                res.pb(mx + 1);
            }
            for(int i = 0; i <= n; ++i){
                m[i] = 0;
            }
        }
        cout<<res.size()<<'\n';
        for(auto u:res){
            cout<<u<<" ";
        }
        cout<<'\n';



    }


    return 0;
}
